CC=@CC@
top_builddir=@top_builddir@
JFFI_LIB_BUILD_DIR=$(top_builddir)@JFFI_LIB_BUILD_DIR@
JFFI_LIB_OUT_DIR=$(top_builddir)@JFFI_LIB_OUT_DIR@
SRC_DIR=.

LIBTOOL=@LIBTOOL@
LIBNAME=libjffi.la

JFFI_SRCS = $(wildcard $(SRC_DIR)/*.c)
JFFI_OBJS := $(patsubst $(SRC_DIR)/%.c, $(JFFI_LIB_BUILD_DIR)/%.o, $(JFFI_SRCS))
JFFI_LINKER_OBJECTS := $(subst .c,.lo, $(JFFI_OBJS))

LIBJFFI = $(JFFI_LIB_OUT_DIR)/$(LIBNAME)

JNI_INCLUDED_JFFI_HEADER=-I$(top_builddir)@JNI_INCLUDED_JFFI_HEADER@

all:	$(LIBJFFI)

$(JFFI_LIB_BUILD_DIR)/%.o : $(SRC_DIR)/%.c
	@mkdir -p $(@D)
	$(LIBTOOL) --mode=compile $(CC) @CFLAGS@ -pthread -fPIC @JNI_INCLUDE_FLAGS@ $(JNI_INCLUDED_JFFI_HEADER) -c $< -o $@


$(LIBJFFI):  $(JFFI_OBJS)
	@mkdir -p $(@D)
	$(LIBTOOL) --mode=link $(CC) -o $(LIBJFFI) -pthread $(JFFI_LINKER_OBJECTS) -Wl,--no-undefined -lffi -ldl -rpath /tmp

clean::
	rm -rf $(JFFI_LIB_BUILD_DIR)
	rm -f $(LIBJFFI)

debug::
	@echo "SRCS=$(JFFI_SRCS)"
	@echo "LIBJFFI=$(LIBJFFI)"
	@echo "JFFI_LINKER_OBJECTS=$(JFFI_LINKER_OBJECTS)"
	@echo "JNI_INCLUDE_FLAGS=@JNI_INCLUDE_FLAGS@"
	@echo "JNI_INCLUDED_HEADER=$(JNI_INCLUDED_HEADER)"
